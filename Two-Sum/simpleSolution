class simpleSolution {
    public int[] twoSum(int[] nums, int target) {
        HashMap<Integer, Integer> map = new HashMap<>();
        
        for (int i = 0; i < nums.length; i++) {
            int complement = target - nums[i];
            
            if (map.containsKey(complement)) {
                return new int[]{map.get(complement), i}; // Found pair
            }
            
            map.put(nums[i], i); // Store the number and its index
        }
        
        return new int[]{-1, -1}; 
    }
    public static void main(String[] args) {
        System.out.println("Welcome to my Solution!");

        int[] test1 = {2,7,11,15};
        int[] result;
        System.out.println("Running Test 1: [2,7,11,15] Target: 9");
        result = twoSum(test1, 9);
        System.out.println(Arrays.toString(result) + "\n");


        int[] test2 = {3,2,4};
        int[] result2;
        System.out.println("Running Test 1: [3,2,4] Target: 6");
        result2 = twoSum(test2, 6);
        System.out.println(Arrays.toString(result2) + "\n");

        int[] test3 = {3,3};
        int[] result3;
        System.out.println("Running Test 1: [3,3] Target: 6");
        result3 = twoSum(test3, 6);
        System.out.println(Arrays.toString(result3) + "\n");
    }
}
